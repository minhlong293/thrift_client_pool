/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package longhm.dal.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2018-05-24")
public class ProfileTagResult implements org.apache.thrift.TBase<ProfileTagResult, ProfileTagResult._Fields>, java.io.Serializable, Cloneable, Comparable<ProfileTagResult> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProfileTagResult");

  private static final org.apache.thrift.protocol.TField RETURN_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("ReturnCode", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PROFILE_TAG_FIELD_DESC = new org.apache.thrift.protocol.TField("profileTag", org.apache.thrift.protocol.TType.STRUCT, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ProfileTagResultStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ProfileTagResultTupleSchemeFactory());
  }

  /**
   * 
   * @see longhm.common.thrift.ReturnCode
   */
  public longhm.common.thrift.ReturnCode ReturnCode; // required
  public ProfileTag profileTag; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see longhm.common.thrift.ReturnCode
     */
    RETURN_CODE((short)1, "ReturnCode"),
    PROFILE_TAG((short)2, "profileTag");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RETURN_CODE
          return RETURN_CODE;
        case 2: // PROFILE_TAG
          return PROFILE_TAG;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RETURN_CODE, new org.apache.thrift.meta_data.FieldMetaData("ReturnCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, longhm.common.thrift.ReturnCode.class)));
    tmpMap.put(_Fields.PROFILE_TAG, new org.apache.thrift.meta_data.FieldMetaData("profileTag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProfileTag.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProfileTagResult.class, metaDataMap);
  }

  public ProfileTagResult() {
  }

  public ProfileTagResult(
    longhm.common.thrift.ReturnCode ReturnCode,
    ProfileTag profileTag)
  {
    this();
    this.ReturnCode = ReturnCode;
    this.profileTag = profileTag;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProfileTagResult(ProfileTagResult other) {
    if (other.isSetReturnCode()) {
      this.ReturnCode = other.ReturnCode;
    }
    if (other.isSetProfileTag()) {
      this.profileTag = new ProfileTag(other.profileTag);
    }
  }

  public ProfileTagResult deepCopy() {
    return new ProfileTagResult(this);
  }

  @Override
  public void clear() {
    this.ReturnCode = null;
    this.profileTag = null;
  }

  /**
   * 
   * @see longhm.common.thrift.ReturnCode
   */
  public longhm.common.thrift.ReturnCode getReturnCode() {
    return this.ReturnCode;
  }

  /**
   * 
   * @see longhm.common.thrift.ReturnCode
   */
  public ProfileTagResult setReturnCode(longhm.common.thrift.ReturnCode ReturnCode) {
    this.ReturnCode = ReturnCode;
    return this;
  }

  public void unsetReturnCode() {
    this.ReturnCode = null;
  }

  /** Returns true if field ReturnCode is set (has been assigned a value) and false otherwise */
  public boolean isSetReturnCode() {
    return this.ReturnCode != null;
  }

  public void setReturnCodeIsSet(boolean value) {
    if (!value) {
      this.ReturnCode = null;
    }
  }

  public ProfileTag getProfileTag() {
    return this.profileTag;
  }

  public ProfileTagResult setProfileTag(ProfileTag profileTag) {
    this.profileTag = profileTag;
    return this;
  }

  public void unsetProfileTag() {
    this.profileTag = null;
  }

  /** Returns true if field profileTag is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileTag() {
    return this.profileTag != null;
  }

  public void setProfileTagIsSet(boolean value) {
    if (!value) {
      this.profileTag = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RETURN_CODE:
      if (value == null) {
        unsetReturnCode();
      } else {
        setReturnCode((longhm.common.thrift.ReturnCode)value);
      }
      break;

    case PROFILE_TAG:
      if (value == null) {
        unsetProfileTag();
      } else {
        setProfileTag((ProfileTag)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RETURN_CODE:
      return getReturnCode();

    case PROFILE_TAG:
      return getProfileTag();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RETURN_CODE:
      return isSetReturnCode();
    case PROFILE_TAG:
      return isSetProfileTag();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ProfileTagResult)
      return this.equals((ProfileTagResult)that);
    return false;
  }

  public boolean equals(ProfileTagResult that) {
    if (that == null)
      return false;

    boolean this_present_ReturnCode = true && this.isSetReturnCode();
    boolean that_present_ReturnCode = true && that.isSetReturnCode();
    if (this_present_ReturnCode || that_present_ReturnCode) {
      if (!(this_present_ReturnCode && that_present_ReturnCode))
        return false;
      if (!this.ReturnCode.equals(that.ReturnCode))
        return false;
    }

    boolean this_present_profileTag = true && this.isSetProfileTag();
    boolean that_present_profileTag = true && that.isSetProfileTag();
    if (this_present_profileTag || that_present_profileTag) {
      if (!(this_present_profileTag && that_present_profileTag))
        return false;
      if (!this.profileTag.equals(that.profileTag))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_ReturnCode = true && (isSetReturnCode());
    list.add(present_ReturnCode);
    if (present_ReturnCode)
      list.add(ReturnCode.getValue());

    boolean present_profileTag = true && (isSetProfileTag());
    list.add(present_profileTag);
    if (present_profileTag)
      list.add(profileTag);

    return list.hashCode();
  }

  @Override
  public int compareTo(ProfileTagResult other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetReturnCode()).compareTo(other.isSetReturnCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReturnCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ReturnCode, other.ReturnCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileTag()).compareTo(other.isSetProfileTag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileTag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileTag, other.profileTag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ProfileTagResult(");
    boolean first = true;

    sb.append("ReturnCode:");
    if (this.ReturnCode == null) {
      sb.append("null");
    } else {
      sb.append(this.ReturnCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("profileTag:");
    if (this.profileTag == null) {
      sb.append("null");
    } else {
      sb.append(this.profileTag);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (profileTag != null) {
      profileTag.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProfileTagResultStandardSchemeFactory implements SchemeFactory {
    public ProfileTagResultStandardScheme getScheme() {
      return new ProfileTagResultStandardScheme();
    }
  }

  private static class ProfileTagResultStandardScheme extends StandardScheme<ProfileTagResult> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProfileTagResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RETURN_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ReturnCode = longhm.common.thrift.ReturnCode.findByValue(iprot.readI32());
              struct.setReturnCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROFILE_TAG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.profileTag = new ProfileTag();
              struct.profileTag.read(iprot);
              struct.setProfileTagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProfileTagResult struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.ReturnCode != null) {
        oprot.writeFieldBegin(RETURN_CODE_FIELD_DESC);
        oprot.writeI32(struct.ReturnCode.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.profileTag != null) {
        oprot.writeFieldBegin(PROFILE_TAG_FIELD_DESC);
        struct.profileTag.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProfileTagResultTupleSchemeFactory implements SchemeFactory {
    public ProfileTagResultTupleScheme getScheme() {
      return new ProfileTagResultTupleScheme();
    }
  }

  private static class ProfileTagResultTupleScheme extends TupleScheme<ProfileTagResult> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProfileTagResult struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetReturnCode()) {
        optionals.set(0);
      }
      if (struct.isSetProfileTag()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetReturnCode()) {
        oprot.writeI32(struct.ReturnCode.getValue());
      }
      if (struct.isSetProfileTag()) {
        struct.profileTag.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProfileTagResult struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.ReturnCode = longhm.common.thrift.ReturnCode.findByValue(iprot.readI32());
        struct.setReturnCodeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.profileTag = new ProfileTag();
        struct.profileTag.read(iprot);
        struct.setProfileTagIsSet(true);
      }
    }
  }

}

