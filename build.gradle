plugins {
    id 'java'
//    id 'maven-publish'
//    id 'signing'
}

group 'longhm'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            groupId 'longhm.thrift'
//            artifactId 'clientpool'
//            version '0.9.3'
//            from components.java
//
//            pom.withXml {
//                def pomFile = file("${project.buildDir}/generated-pom.xml")
//                writeTo(pomFile)
//                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
//                artifact(pomAscFile) {
//                    classifier = null
//                    extension = 'pom.asc'
//                }
//            }
//
//            artifact(sourceJar) {
//                classifier = 'sources'
//            }
//            artifact(javadocJar) {
//                classifier = 'javadoc'
//            }
//
//            // create the signed artifacts
//            project.tasks.signArchives.signatureFiles.each {
//                artifact(it) {
//                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
//                    if (matcher.find()) {
//                        classifier = matcher.group(1)
//                    } else {
//                        classifier = null
//                    }
//                    extension = 'jar.asc'
//                }
//            }
//        }
//    }
//}
dependencies {
    compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.5.0'
    compile group: 'org.apache.thrift', name: 'libthrift', version: '0.9.3'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}
//task sourceJar(type: Jar) {
//    classifier "sources"
//    from sourceSets.main.allJava
//}
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier "javadoc"
//    from javadoc.destinationDir
//}
//artifacts {
//    archives jar
//    archives sourceJar
//    archives javadocJar
//}
//signing {
//    sign configurations.archives
//}